function setCookie(name, value, days = 30) {
    const expires = new Date();
    expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));
    document.cookie = `${name}=${value};expires=${expires.toUTCString()};path=/`;
}

function getCookie(name) {
    const nameEQ = name + "=";
    const ca = document.cookie.split(';');
    for(let i = 0; i < ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) === ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
}

function clearAllCookies() {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ?')) {
        const cookies = document.cookie.split(";");
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i];
            const eqPos = cookie.indexOf("=");
            const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;
            document.cookie = name + "=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/";
        }
        location.reload();
    }
}

// ===== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï =====
document.addEventListener('DOMContentLoaded', function() {
    initializeVisitTracking();
    loadSavedTheme();
    loadSavedCalculation();
    initializeScrollTracking();
    initializeTypingEffect();
    emailjs.init("5_SwWTlM9l1VkFfY9");
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
    initAnimations();
});

// ===== –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ü–û–°–ï–©–ï–ù–ò–ô =====
function initializeVisitTracking() {
    let visitCount = parseInt(getCookie('visitCount')) || 0;
    let lastVisit = getCookie('lastVisit') || '–í–ø–µ—Ä–≤—ã–µ';
    
    visitCount++;
    const currentTime = new Date().toLocaleString('ru-RU');
    
    setCookie('visitCount', visitCount);
    setCookie('lastVisit', currentTime);
    
    document.getElementById('visit-count').textContent = visitCount;
    document.getElementById('last-visit').textContent = lastVisit;
}

// ===== –ü–ï–†–ï–ö–õ–Æ–ß–ï–ù–ò–ï –¢–ï–ú–´ =====
function toggleTheme() {
    const body = document.body;
    const themeToggle = document.getElementById('theme-toggle');
    
    if (body.classList.contains('dark-theme')) {
        body.classList.remove('dark-theme');
        themeToggle.textContent = 'üåô';
        setCookie('theme', 'light');
    } else {
        body.classList.add('dark-theme');
        themeToggle.textContent = '‚òÄÔ∏è';
        setCookie('theme', 'dark');
    }
}

function loadSavedTheme() {
    const savedTheme = getCookie('theme');
    if (savedTheme === 'dark') {
        document.body.classList.add('dark-theme');
        document.getElementById('theme-toggle').textContent = '‚òÄÔ∏è';
    }
}

// ===== –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –°–¢–û–ò–ú–û–°–¢–ò =====
function calculateTotal() {
    const checkboxes = document.querySelectorAll('.calc-checkbox:checked');
    let total = 0;
    
    checkboxes.forEach(checkbox => {
        total += parseInt(checkbox.dataset.price);
    });
    
    document.getElementById('calc-result').textContent = 
        `–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${total.toLocaleString('ru-RU')} ‚ÇΩ`;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ cookies
    const selectedServices = Array.from(checkboxes).map(cb => cb.dataset.price);
    setCookie('selectedServices', JSON.stringify(selectedServices));
    setCookie('calculatedTotal', total);
}

function resetCalculator() {
    document.querySelectorAll('.calc-checkbox').forEach(checkbox => {
        checkbox.checked = false;
    });
    calculateTotal();
}

function saveCalculation() {
    const totalStr = getCookie('calculatedTotal');
    const total = parseInt(totalStr || '0');
    const saveMessage = document.getElementById('save-message');

    if (total > 0) {
        // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        saveMessage.textContent = `‚úÖ –†–∞—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${total.toLocaleString('ru-RU')} ‚ÇΩ`;
        saveMessage.style.display = 'block';

        // –°–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            saveMessage.style.display = 'none';
        }, 5000);
    } else {
        saveMessage.textContent = '‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏';
        saveMessage.style.display = 'block';
        setTimeout(() => {
            saveMessage.style.display = 'none';
        }, 5000);
    }
}

function loadSavedCalculation() {
    const savedServices = getCookie('selectedServices');
    if (savedServices) {
        try {
            const services = JSON.parse(savedServices);
            services.forEach(price => {
                const checkbox = document.querySelector(`[data-price="${price}"]`);
                if (checkbox) checkbox.checked = true;
            });
            calculateTotal();
        } catch (e) {
            console.log('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞');
        }
    }
}

// ===== –£–í–ï–õ–ò–ß–ï–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô =====
function zoomImage(img) {
    const overlay = document.getElementById('zoom-overlay');
    
    if (img.classList.contains('zoomed')) {
        closeZoom();
    } else {
        img.classList.add('zoomed');
        overlay.style.display = 'block';
        document.body.style.overflow = 'hidden';
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        setCookie('lastImageView', new Date().toISOString());
    }
}

function closeZoom() {
    const zoomedImg = document.querySelector('.zoomed');
    const overlay = document.getElementById('zoom-overlay');
    
    if (zoomedImg) {
        zoomedImg.classList.remove('zoomed');
        overlay.style.display = 'none';
        document.body.style.overflow = '';
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
        closeZoom();
    }
});

// ===== –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –°–ö–†–û–õ–õ–ê =====
function initializeScrollTracking() {
    const scrollProgress = document.getElementById('scroll-progress');
    const currentSectionSpan = document.getElementById('current-section');
    
    window.addEventListener('scroll', function() {
        // –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–∫—Ä–æ–ª–ª–∞
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        const docHeight = document.body.scrollHeight - window.innerHeight;
        const scrollPercent = (scrollTop / docHeight) * 100;
        scrollProgress.style.width = scrollPercent + '%';
        
        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å–µ–∫—Ü–∏–∏
        const sections = document.querySelectorAll('section[id]');
        let currentSection = '–ì–ª–∞–≤–Ω–∞—è';
        
        sections.forEach(section => {
            const rect = section.getBoundingClientRect();
            if (rect.top <= 100 && rect.bottom >= 100) {
                currentSection = section.getAttribute('id');
                // –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è —Å–µ–∫—Ü–∏–π
                switch(currentSection) {
                    case 'home': currentSection = '–ì–ª–∞–≤–Ω–∞—è'; break;
                    case 'services': currentSection = '–£—Å–ª—É–≥–∏'; break;
                    case 'calculator': currentSection = '–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä'; break;
                    case 'about': currentSection = '–û –ø—Ä–æ–≥—Ä–∞–º–º–µ'; break;
                    case 'contact': currentSection = '–ö–æ–Ω—Ç–∞–∫—Ç—ã'; break;
                }
            }
        });
        
        currentSectionSpan.textContent = currentSection;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞
        setCookie('scrollPosition', scrollTop);
        setCookie('currentSection', currentSection);
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é —Å–∫—Ä–æ–ª–ª–∞
    const savedScrollPosition = getCookie('scrollPosition');
    if (savedScrollPosition && savedScrollPosition > 100) {
        setTimeout(() => {
            window.scrollTo({
                top: parseInt(savedScrollPosition),
                behavior: 'smooth'
            });
        }, 1000);
    }
}

// ===== –≠–§–§–ï–ö–¢ –ü–ï–ß–ê–¢–ò =====
function initializeTypingEffect() {
    const typingElement = document.querySelector('.typing-effect');
    if (typingElement && !getCookie('typingShown')) {
        setCookie('typingShown', 'true');
        // –≠—Ñ—Ñ–µ–∫—Ç —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω —á–µ—Ä–µ–∑ CSS
    }
}

// ===== –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø =====

function sendEmail(event) {
    event.preventDefault();

    const submitBtn = document.getElementById('submit-btn');
    const btnText = document.getElementById('btn-text');
    const successMessage = document.getElementById('success-message');
    const errorMessage = document.getElementById('error-message');
    const form = document.getElementById('contact-form');

    // –°–∫—Ä—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    successMessage.style.display = 'none';
    errorMessage.style.display = 'none';

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    submitBtn.disabled = true;
    btnText.textContent = '–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è...';

    // –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const templateParams = {
        from_name: document.getElementById('name').value,
        from_email: document.getElementById('email').value,
        message: document.getElementById('message').value,
        to_email: 'vlad.konon2005@mail.ru'
    };

    emailjs.send('service_loiix7s', 'template_mzp8t71', templateParams)
        .then(function(response) {
            successMessage.style.display = 'block';
            successMessage.textContent = '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!';
            form.reset();
            submitBtn.disabled = false;
            btnText.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ';
        }, function(error) {
            errorMessage.style.display = 'block';
            errorMessage.textContent = '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ' + (error.text || error);
            submitBtn.disabled = false;
            btnText.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ';
        });
}



// ===== –ê–ù–ò–ú–ê–¶–ò–ò –ü–û–Ø–í–õ–ï–ù–ò–Ø =====
function initAnimations() {
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.opacity = '1';
                entry.target.style.transform = 'translateY(0)';
            }
        });
    }, observerOptions);

    document.querySelectorAll('.section').forEach(section => {
        section.style.opacity = '0';
        section.style.transform = 'translateY(30px)';
        section.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(section);
    });
}

// ===== –ü–õ–ê–í–ù–ê–Ø –ü–†–û–ö–†–£–¢–ö–ê =====
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function(e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–ª–∏–∫ –ø–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
            setCookie('lastNavClick', this.getAttribute('href'));
        }
    });
});

// ===== –í–ê–õ–ò–î–ê–¶–ò–Ø –§–û–†–ú–´ =====
document.addEventListener('DOMContentLoaded', function() {
    const nameInput = document.getElementById('name');
    const emailInput = document.getElementById('email');
    const messageInput = document.getElementById('message');

    function validateField(field, condition) {
        const isValid = condition();
        if (!isValid && field.value.length > 0) {
            field.style.borderColor = '#dc3545';
        } else if (isValid) {
            field.style.borderColor = '#28a745';
        } else {
            field.style.borderColor = '#ddd';
        }
        return isValid;
    }

    if (nameInput) nameInput.addEventListener('input', function() {
        validateField(this, () => this.value.length >= 2);
    });

    if (emailInput) emailInput.addEventListener('input', function() {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        validateField(this, () => emailRegex.test(this.value));
    });

    if (messageInput) messageInput.addEventListener('input', function() {
        validateField(this, () => this.value.length >= 10);
    });
});

// === –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–¥–∞—á (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –±–∞–∑–æ–≤—ã–π URL) ===

function loadTasks() {
  fetch('/api/tasks')
    .then(res => res.json())
    .then(tasks => {
      const list = document.getElementById('task-list');
      list.innerHTML = '';
      tasks.forEach(task => {
        const li = document.createElement('li');
        li.textContent = task.content;
        li.className = 'tdItem';
        li.dataset.id = task.id;
        list.appendChild(li);
      });
    })
    .catch(err => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–¥–∞—á:', err));
}

document.addEventListener('DOMContentLoaded', () => {
  const input = document.getElementById('task-input');
  const list  = document.getElementById('task-list');

  input.addEventListener('keydown', e => {
    if (e.key === 'Enter') {
      const content = input.value.trim();
      if (!content) return;
      fetch('/api/tasks', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ content })
      })
      .then(() => { input.value = ''; loadTasks(); })
      .catch(err => console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏:', err));
    }
  });

  list.addEventListener('click', e => {
    if (e.target.classList.contains('tdItem')) {
      const id = e.target.dataset.id;
      fetch(`/api/tasks/${id}`, { method: 'DELETE' })
        .then(() => loadTasks())
        .catch(err => console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏:', err));
    }
  });

  loadTasks();
});

